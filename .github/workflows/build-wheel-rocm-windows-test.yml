name: Test Build ROCm Windows

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag of llama-cpp-python to build: v0.1.78'
        default: 'v0.1.78'
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: 'Version tag of llama-cpp-python to build: v0.1.78'
        default: 'v0.1.78'
        required: false
        type: string

jobs:
  build_libs:
    name: Build ROCm Lib
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'abetlen/llama-cpp-python'
          ref: ${{ inputs.version }}
          
      - name: Install ROCm SDK
        run: |
          curl -LO https://download.amd.com/developer/eula/rocm-hub/AMD-Software-PRO-Edition-23.Q3-Win10-Win11-For-HIP.exe
          Start-Process 'AMD-Software-PRO-Edition-23.Q3-Win10-Win11-For-HIP.exe' -ArgumentList '-install' -NoNewWindow -Wait
          echo "C:\Program Files\AMD\ROCm\5.5\bin" >> $env:GITHUB_PATH
          echo 'ROCM_PATH=C:\Program Files\AMD\ROCm\5.5' >> $env:GITHUB_ENV
          echo 'HIP_PATH=C:\Program Files\AMD\ROCm\5.5' >> $env:GITHUB_ENV
          echo "ROCM_VERSION=5.5.1" >> $env:GITHUB_ENV
          
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: Install Dependencies
        run: |
          python -m pip install build wheel scikit-build cmake ninja
        
      - name: Build Lib
        run: |
          $env:CC = 'C:\Program Files\AMD\ROCm\5.5\bin\clang.exe'
          $env:CXX = 'C:\Program Files\AMD\ROCm\5.5\bin\clang++.exe'
          $env:CMAKE_PREFIX_PATH = 'C:\Program Files\AMD\ROCm\5.5'
          $env:VERBOSE = '1'
          $env:FORCE_CMAKE = '1'
          $env:GPU_TARGETS = 'all'
          $env:CMAKE_ARGS = '-GNinja -DLLAMA_HIPBLAS=ON -DBUILD_SHARED_LIBS=ON'
          python -m build -n --wheel -C--build-option=egg_info "-C--build-option=--tag-build=+rocm$env:ROCM_VERSION"
